"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[838],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),f=c(n),d=a,m=f["".concat(l,".").concat(d)]||f[d]||p[d]||i;return n?r.createElement(m,o(o({ref:t},s),{},{components:n})):r.createElement(m,o({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4945:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return s},default:function(){return f}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],u={},l="Settings > Culture Interface Path",c={unversionedId:"settings/culture-interface-path",id:"settings/culture-interface-path",isDocsHomePage:!1,title:"Settings > Culture Interface Path",description:"Overview",source:"@site/docs/settings/culture-interface-path.md",sourceDirName:"settings",slug:"/settings/culture-interface-path",permalink:"/kazoo/docs/settings/culture-interface-path",editUrl:"https://github.com/brandongregoryscott/kazoo/edit/main/documentation/docs/settings/culture-interface-path.md",tags:[],version:"current",frontMatter:{}},s=[{value:"Overview",id:"overview",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Default Value",id:"default-value",children:[]}],p={toc:s};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"settings--culture-interface-path"},"Settings > Culture Interface Path"),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Path/glob pattern to interface defining typed i18n keys"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Type: ",(0,i.kt)("inlineCode",{parentName:"li"},"string")),(0,i.kt)("li",{parentName:"ul"},"Key (in ",(0,i.kt)("inlineCode",{parentName:"li"},"settings.json"),"): ",(0,i.kt)("inlineCode",{parentName:"li"},"kazoo.cultureInterfacePath"))),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Uses ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Glob_(programming)"},"glob pattern matching")," to find the ",(0,i.kt)("strong",{parentName:"p"},"first matching file")," to be used for defining keys."),(0,i.kt)("p",null,"For example, given the following structure and the pattern ",(0,i.kt)("inlineCode",{parentName:"p"},"**/interfaces/culture-resources.ts"),", the culture interface path would be matched as ",(0,i.kt)("inlineCode",{parentName:"p"},"interfaces/culture-resources.ts"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"cultures/\n\u251c\u2500 interfaces/\n\u2502 \u251c\u2500 culture-resources.ts\ninterfaces/\n\u251c\u2500 culture-resources.ts\n")),(0,i.kt)("p",null,"If ",(0,i.kt)("inlineCode",{parentName:"p"},"interfaces/culture-resources.ts")," did not exist, the deeper ",(0,i.kt)("inlineCode",{parentName:"p"},"cultures/interfaces/culture-resources.ts")," file would still match."),(0,i.kt)("p",null,"Glob patterns can be tested online via this ",(0,i.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/community/tools/glob"},"DigitalOcean tool"),"."),(0,i.kt)("p",null,"If desired, you can also forgo the glob pattern and put the actual file path to use. ",(0,i.kt)("inlineCode",{parentName:"p"},"cultures/interfaces/culture-resources.ts")," would match on this exact path, so you wouldn't have to worry about ",(0,i.kt)("inlineCode",{parentName:"p"},"interfaces/culture-resources.ts")," existing in the example above."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"These examples are contrived, and it is recommended to keep just one interface for defining keys.")),(0,i.kt)("h2",{id:"default-value"},"Default Value"),(0,i.kt)("p",null,"Defaults to ",(0,i.kt)("inlineCode",{parentName:"p"},"**/interfaces/culture-resources.ts"),", which is loose enough to match a deeply nested, conventionally named ",(0,i.kt)("inlineCode",{parentName:"p"},"interfaces")," folder."))}f.isMDXComponent=!0}}]);